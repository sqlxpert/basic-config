---
AWSTemplateFormatVersion: "2010-09-09"

Description: "Config mgmt: S3 bucket, IAM policies, EC2 instance roles, VPC security groups | Paul Marcelin | July, 2018"

Parameters:

  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: "Identifier of the Virtual Private Cloud in which EC2 instances will later be created; if unsure, select the default VPC"

Resources:

  ConfigBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      VersioningConfiguration:
        Status: Enabled

  ConfigManagePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "Config mgmt: S3 config store bucket: upload, list, download, delete objects; S3: list names of all buckets; EC2: set, delete Profiles instance tag and describe all resources; STS: decode permissions errors. Temporarily attach to EC2 instance role for instance from which files will be uploaded, etc., or to IAM user whose API key will be used on a non-EC2 system."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "s3:ListAllMyBuckets"
            Resource: "*"
          - Effect: Allow
            Action:
              - "s3:ListBucket"
            Resource: !GetAtt ConfigBucket.Arn
          - Effect: Allow
            Action:  # Action wildcard supports versioned objects
              - "s3:PutObject*"
              - "s3:GetObject*"
              - "s3:DeleteObject*"
            Resource: !Sub "${ConfigBucket.Arn}/*"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:*:${AWS::AccountId}:instance/*"
            Condition:
              "ForAllValues:StringEquals":
                "aws:TagKeys":
                  - "Profiles"
          - Effect: Allow
            Action:
              - "ec2:Describe*"
            Resource: "*"
          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"

  ConfigApplyPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "Config mgmt: S3 config store bucket: list, download objects; S3: list names of all buckets; EC2: get all tags; STS: decode permissions errors. Permanently attach to EC2 instance role for managed instances."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "s3:ListAllMyBuckets"
            Resource: "*"
          - Effect: Allow
            Action:
              - "s3:ListBucket"
            Resource: !GetAtt ConfigBucket.Arn
          - Effect: Allow
            Action:   # Action wildcard supports versioned objects
              - "s3:GetObject*"
            Resource: !Sub "${ConfigBucket.Arn}/*"
          - Effect: Allow
            Action:
              - "ec2:DescribeTags"
            Resource: "*"
          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"

  ConfigEc2InstProfilesTagLockPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "Config mgmt: EC2 instances: prevent creation/modification and deletion of Profiles tag. Attach to untrusted IAM users and roles."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:*:${AWS::AccountId}:instance/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "Profiles"
 
  ConfigManagedEC2InstRole:
    Type: "AWS::IAM::Role"
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref ConfigApplyPolicy

  ConfigManagedEC2InstProfile:
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: Delete
    Properties:
      Roles:
        - !Ref ConfigManagedEC2InstRole

  ConfigCentralEC2InstRole:
    Type: "AWS::IAM::Role"
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref ConfigManagePolicy

  ConfigCentralEC2InstProfile:
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: Delete
    Properties:
      Roles:
        - !Ref ConfigCentralEC2InstRole

  ConfigEc2InstLoginSecGrp:
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: Delete
    Properties:
      GroupDescription: !Sub "Config mgmt: Login access from public Internet. Attach to the central EC2 instance and all managed instances. Not safe for production!"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
          Description: "SSH from public Internet. Not safe for production!"

  ConfigEc2InstLoginSecGrp:
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: Delete
    Properties:
      GroupDescription: !Sub "Config mgmt: Login access from public Internet. Attach to the central EC2 instance and all managed instances. Not safe for production!"
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: "-1"  # All traffic
          CidrIp: "127.0.0.1/32"  # Loopback interface
          Description: "Dummy to prevent CloudFormation from automatically creating a rule allowing all outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
          Description: "SSH from public Internet. Not safe for production!"

  ConfigExampleWebSecGrp:
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: Delete
    Properties:
      GroupDescription: !Sub "Config mgmt: Web traffic from public Internet. Attach to managed EC2 instances (and load balancers, if present) when using a sample profile that defines a Web server, such as the php-nginx profile. Not safe for production without DDoS attack protection!"
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: "-1"  # All traffic
          CidrIp: "127.0.0.1/32"  # Loopback interface
          Description: "Dummy to prevent CloudFormation from automatically creating a rule allowing all outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
          Description: "HTTP from public Internet. Not safe for production without DDoS attack protection!"

Outputs:
  ConfigBucketName:
    Value: !Ref ConfigBucket
    Description: "Config mgmt: name of S3 bucket for configuration data"
    Export:
      Name: "S3Buck-Config-Name"
  ConfigBucketArn:
    Value: !GetAtt ConfigBucket.Arn
    Description: "Config mgmt: ARN of S3 bucket for configuration data"
    Export:
      Name: "S3Buck-Config-Arn"
  ConfigManagePolicyArn:
    Value: !Ref ConfigManagePolicy
    Description: "Config mgmt: ARN of IAM policy allowing management of configuration data"
    Export:
      Name: "IAMPol-ConfigManage-Arn"
  ConfigApplyPolicyArn:
    Value: !Ref ConfigApplyPolicy
    Description: "Config mgmt: ARN of IAM policy allowing application of configurations"
    Export:
      Name: "IAMPol-ConfigApply-Arn"
  ConfigEc2InstProfilesTagLockPolicyArn:
    Value: !Ref ConfigEc2InstProfilesTagLockPolicy
    Description: "Config mgmt: ARN of IAM policy protecting Profiles tag of EC2 instances"
    Export:
      Name: "IAMPol-Ec2InstProfilesTagLock-Arn"
  ConfigManagedEC2InstProfile:
    Value: !Ref ConfigManagedEC2InstProfile
    Description: "Config mgmt: name of IAM EC2 instance profile (container for instance role) for managed instances"
    Export:
      Name: "IAMEC2InstProf-ConfigManaged-Name"
  ConfigCentralEC2InstProfile:
    Value: !Ref ConfigCentralEC2InstProfile
    Description: "Config mgmt: name of IAM EC2 instance profile (container for instance role) for central instance"
    Export:
      Name: "IAMEC2InstProf-ConfigCentral-Name"
  ConfigEc2InstLoginSecGrp:
    Value: !Ref ConfigEc2InstLoginSecGrp
    Description: "Config mgmt: ID of security group allowing login access to EC2 instances"
    Export:
      Name: "VPCSecGrp-ConfigEc2InstLogin-Id"
  ConfigExampleWebSecGrp:
    Value: !Ref ConfigExampleWebSecGrp
    Description: "Config mgmt: ID of example security group allowing Web traffic"
    Export:
      Name: "VPCSecGrp-ConfigExampleWeb-Id"
